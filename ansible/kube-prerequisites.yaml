- hosts: all
  become: yes
  tasks:
    - fail:
       msg: "OS should be Ubuntu 22.04, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '22.04'

    - name: update APT packages
      retries: 3
      delay: 10
      apt:
        update_cache: yes

    - name: reboot and wait for reboot to complete
      retries: 3
      delay: 10      
      reboot:

    - name: disable SWAP (Kubeadm requirement)
      retries: 3
      delay: 10
      shell: |
        swapoff -a

    - name: disable SWAP in fstab (Kubeadm requirement)
      retries: 3
      delay: 10
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: create an empty file for the Containerd module
      retries: 3
      delay: 10
      copy:
        content: ""
        dest: /etc/modules-load.d/containerd.conf
        force: no

    - name: configure modules for Containerd
      retries: 3
      delay: 10
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
             overlay
             br_netfilter

    - name: create an empty file for Kubernetes sysctl params
      retries: 3
      delay: 10
      copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        force: no

    - name: configure sysctl params for Kubernetes
      retries: 3
      delay: 10
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - 'net.bridge.bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'

    - name: apply sysctl params without reboot
      retries: 3
      delay: 10
      command: sysctl --system

    - name: install APT Transport HTTPS
      retries: 3
      delay: 10
      apt:
        name: apt-transport-https
        state: present

    - name: add Docker apt-key
      retries: 3
      delay: 10
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker-apt-keyring.asc
        mode: '0644'
        force: true

    - name: add Docker's APT repository
      retries: 3
      delay: 10
      apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }} signed-by=/etc/apt/keyrings/docker-apt-keyring.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: add Kubernetes apt-key
      retries: 3
      delay: 10
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'
        force: true

    - name: add Kubernetes' APT repository
      retries: 3
      delay: 10
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: yes

    - name: install Containerd
      retries: 3
      delay: 10
      apt:
        name: containerd.io
        state: present

    - name: create Containerd directory
      retries: 3
      delay: 10
      file:
        path: /etc/containerd
        state: directory

    - name: add Containerd configuration
      retries: 3
      delay: 10
      shell: /usr/bin/containerd config default > /etc/containerd/config.toml

    - name: configuring the systemd cgroup driver for Containerd
      retries: 3
      delay: 10
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '            SystemdCgroup = false'
        line: '            SystemdCgroup = true'

    - name: enable the Containerd service and start it
      retries: 3
      delay: 10
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: install Kubelet
      retries: 3
      delay: 10
      apt:
        name: kubelet
        state: present
        update_cache: true

    - name: install Kubeadm
      retries: 3
      delay: 10
      apt:
        name: kubeadm
        state: present

    - name: enable the Kubelet service, and enable it persistently
      retries: 3
      delay: 10
      service:
        name: kubelet
        enabled: yes

    - name: load br_netfilter kernel module
      retries: 3
      delay: 10
      modprobe:
        name: br_netfilter
        state: present

    - name: set bridge-nf-call-iptables
      retries: 3
      delay: 10
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: set ip_forward
      retries: 3
      delay: 10
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

    - name: reboot and wait for reboot to complete
      retries: 3
      delay: 10
      reboot: